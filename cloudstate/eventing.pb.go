// Copyright 2019 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Extension for specifying which topics a gRPC endpoint should be connected
// to, in order to facilitate consuming and producing events from a message broker.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: cloudstate/eventing.proto

package cloudstate

import (
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Eventing configuration for a gRPC method.
type Eventing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event source in configuration.
	In *EventSource `protobuf:"bytes,1,opt,name=in,proto3" json:"in,omitempty"`
	// The event destination out configuration.
	//
	// Optional, if unset, messages out will not be published anywhere.
	Out *EventDestination `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
}

func (x *Eventing) Reset() {
	*x = Eventing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudstate_eventing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eventing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eventing) ProtoMessage() {}

func (x *Eventing) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstate_eventing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eventing.ProtoReflect.Descriptor instead.
func (*Eventing) Descriptor() ([]byte, []int) {
	return file_cloudstate_eventing_proto_rawDescGZIP(), []int{0}
}

func (x *Eventing) GetIn() *EventSource {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *Eventing) GetOut() *EventDestination {
	if x != nil {
		return x.Out
	}
	return nil
}

// Event source configuration
type EventSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The consumer group id.
	//
	// By default, all rpc methods on a given service with the same source will be part of the same virtual consumer
	// group, messages will be routed to the different methods by type. This can be used to override that, if you want
	// multiple methods to act as independent consumers of the same source (ie, if you want the same event to be
	// published to each consumer) then give each consumer a unique name.
	//
	// Note that this does depend on the event source supporting multiple consumer groups. Queue based event sources
	// may not support this.
	ConsumerGroup string `protobuf:"bytes,1,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	// Types that are assignable to Source:
	//	*EventSource_Topic
	//	*EventSource_EventLog
	Source isEventSource_Source `protobuf_oneof:"source"`
}

func (x *EventSource) Reset() {
	*x = EventSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudstate_eventing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSource) ProtoMessage() {}

func (x *EventSource) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstate_eventing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSource.ProtoReflect.Descriptor instead.
func (*EventSource) Descriptor() ([]byte, []int) {
	return file_cloudstate_eventing_proto_rawDescGZIP(), []int{1}
}

func (x *EventSource) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (m *EventSource) GetSource() isEventSource_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *EventSource) GetTopic() string {
	if x, ok := x.GetSource().(*EventSource_Topic); ok {
		return x.Topic
	}
	return ""
}

func (x *EventSource) GetEventLog() string {
	if x, ok := x.GetSource().(*EventSource_EventLog); ok {
		return x.EventLog
	}
	return ""
}

type isEventSource_Source interface {
	isEventSource_Source()
}

type EventSource_Topic struct {
	// A topic source.
	//
	// This will consume events from the given topic name.
	Topic string `protobuf:"bytes,2,opt,name=topic,proto3,oneof"`
}

type EventSource_EventLog struct {
	// An event log source.
	//
	// This will consume events from the given event log with the given persistence id.
	EventLog string `protobuf:"bytes,3,opt,name=event_log,json=eventLog,proto3,oneof"`
}

func (*EventSource_Topic) isEventSource_Source() {}

func (*EventSource_EventLog) isEventSource_Source() {}

type EventDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Destination:
	//	*EventDestination_Topic
	Destination isEventDestination_Destination `protobuf_oneof:"destination"`
}

func (x *EventDestination) Reset() {
	*x = EventDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloudstate_eventing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDestination) ProtoMessage() {}

func (x *EventDestination) ProtoReflect() protoreflect.Message {
	mi := &file_cloudstate_eventing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDestination.ProtoReflect.Descriptor instead.
func (*EventDestination) Descriptor() ([]byte, []int) {
	return file_cloudstate_eventing_proto_rawDescGZIP(), []int{2}
}

func (m *EventDestination) GetDestination() isEventDestination_Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (x *EventDestination) GetTopic() string {
	if x, ok := x.GetDestination().(*EventDestination_Topic); ok {
		return x.Topic
	}
	return ""
}

type isEventDestination_Destination interface {
	isEventDestination_Destination()
}

type EventDestination_Topic struct {
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3,oneof"`
}

func (*EventDestination_Topic) isEventDestination_Destination() {}

var file_cloudstate_eventing_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*Eventing)(nil),
		Field:         1081,
		Name:          "cloudstate.eventing",
		Tag:           "bytes,1081,opt,name=eventing",
		Filename:      "cloudstate/eventing.proto",
	},
}

// Extension fields to descriptor.MethodOptions.
var (
	// optional cloudstate.Eventing eventing = 1081;
	E_Eventing = &file_cloudstate_eventing_proto_extTypes[0]
)

var File_cloudstate_eventing_proto protoreflect.FileDescriptor

var file_cloudstate_eventing_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x08, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x2e,
	0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x22, 0x75,
	0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x39, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x51, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x42, 0x58, 0x0a, 0x0d, 0x69, 0x6f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x69, 0x6f, 0x2f, 0x67, 0x6f, 0x2d,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloudstate_eventing_proto_rawDescOnce sync.Once
	file_cloudstate_eventing_proto_rawDescData = file_cloudstate_eventing_proto_rawDesc
)

func file_cloudstate_eventing_proto_rawDescGZIP() []byte {
	file_cloudstate_eventing_proto_rawDescOnce.Do(func() {
		file_cloudstate_eventing_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloudstate_eventing_proto_rawDescData)
	})
	return file_cloudstate_eventing_proto_rawDescData
}

var file_cloudstate_eventing_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_cloudstate_eventing_proto_goTypes = []interface{}{
	(*Eventing)(nil),                 // 0: cloudstate.Eventing
	(*EventSource)(nil),              // 1: cloudstate.EventSource
	(*EventDestination)(nil),         // 2: cloudstate.EventDestination
	(*descriptor.MethodOptions)(nil), // 3: google.protobuf.MethodOptions
}
var file_cloudstate_eventing_proto_depIdxs = []int32{
	1, // 0: cloudstate.Eventing.in:type_name -> cloudstate.EventSource
	2, // 1: cloudstate.Eventing.out:type_name -> cloudstate.EventDestination
	3, // 2: cloudstate.eventing:extendee -> google.protobuf.MethodOptions
	0, // 3: cloudstate.eventing:type_name -> cloudstate.Eventing
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	3, // [3:4] is the sub-list for extension type_name
	2, // [2:3] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_cloudstate_eventing_proto_init() }
func file_cloudstate_eventing_proto_init() {
	if File_cloudstate_eventing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloudstate_eventing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eventing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudstate_eventing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloudstate_eventing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cloudstate_eventing_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*EventSource_Topic)(nil),
		(*EventSource_EventLog)(nil),
	}
	file_cloudstate_eventing_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EventDestination_Topic)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloudstate_eventing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_cloudstate_eventing_proto_goTypes,
		DependencyIndexes: file_cloudstate_eventing_proto_depIdxs,
		MessageInfos:      file_cloudstate_eventing_proto_msgTypes,
		ExtensionInfos:    file_cloudstate_eventing_proto_extTypes,
	}.Build()
	File_cloudstate_eventing_proto = out.File
	file_cloudstate_eventing_proto_rawDesc = nil
	file_cloudstate_eventing_proto_goTypes = nil
	file_cloudstate_eventing_proto_depIdxs = nil
}
