// Copyright 2019 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Extension for specifying which field in a message is to be considered an
// entity key, for the purposes associating gRPC calls with entities and
// sharding.

syntax = "proto3";

import "cloudstate/entity_key.proto";

package cloudstate.samples.chat.presence;

option java_package = "io.cloudstate.samples.chat.presence";
option java_outer_classname = "PresenceProtos";

option go_package = "github.com/cloudstateio/go-support/example/chat/presence;presence";

message User {
    string name = 1 [(.cloudstate.entity_key) = true];
}

message OnlineStatus {
    bool online = 1;
}

message Empty {
}

service Presence {
    // Connect the given user. They will stay connected as long as the stream stays open.
    rpc Connect (User) returns (stream Empty);
    // Monitor the online status of the given user.
    rpc Monitor (User) returns (stream OnlineStatus);
}
